'use strict';
let IS_CX = false;
if (typeof chrome != 'undefined') IS_CX = chrome.windows == undefined ? false : true;
const angular                  = require('angular');
const angularTranslate         = require('angular-translate');
const angularTranslateErrorLog = require('angular-translate-handler-log');
const angularSanitize          = require('angular-sanitize');
const angularAnimate           = require('angular-animate');
const bip39                    = require('bip39');
const HDKey                    = require('hdkey');
window.hd                    = { bip39: bip39, HDKey: HDKey };
const BigNumber                = require('bignumber.js');
window.BigNumber             = BigNumber;
const marked                   = require('./staticJS/customMarked');
window.marked                = marked;
const ethUtil                  = require('ethereumjs-util');
ethUtil.crypto               = require('crypto');
ethUtil.Tx                   = require('ethereumjs-tx');
ethUtil.scrypt               = require('scryptsy');
ethUtil.uuid                 = require('uuid');
ethUtil.solidityCoder        = require('./solidity/coder');
ethUtil.solidityUtils        = require('./solidity/utils');
ethUtil.WAValidator          = require('wallet-address-validator');
window.ethUtil               = ethUtil;
const format                   = require('string-format');
window.format                = format;
const browser                  = require('detect-browser');
window.browser               = browser;
const Wallet                   = require('./myetherwallet');
window.Wallet                = Wallet;
const Token                    = require('./tokenlib');
window.Token                 = Token;
const globalFuncs              = require('./globalFuncs');
window.globalFuncs           = globalFuncs;
const uiFuncs                  = require('./uiFuncs');
window.uiFuncs               = uiFuncs;
const etherUnits               = require('./etherUnits');
window.etherUnits            = etherUnits;
const ajaxReq                  = require('./ajaxReq');
window.ajaxReq               = ajaxReq;
const nodes                    = require('./nodes');
window.nodes                 = nodes;
const ethFuncs                 = require('./ethFuncs');
window.ethFuncs              = ethFuncs;
const Validator                = require('./validator');
window.Validator             = Validator;
const bity                     = require('./bity');
window.bity                  = bity;
const ens                      = require('./ens');
window.ens                   = ens;
const translate                = require('./translations/translate.js');

if (IS_CX) {
  var cxFuncs                = require('./cxFuncs');
  window.cxFuncs             = cxFuncs;
} else {
    const u2f                  = require('./staticJS/u2f-api');
    const ledger3              = require('./staticJS/ledger3');
    const ledgerEth            = require('./staticJS/ledger-eth');
    const trezorConnect        = require('./staticJS/trezorConnect');
    window.u2f               = u2f;
    window.Ledger3           = ledger3;
    window.ledgerEth         = ledgerEth;
    window.TrezorConnect     = trezorConnect.TrezorConnect;
}

const CustomGasMessages        = require('./customGas.js');
window.CustomGasMessages     = CustomGasMessages;
const tabsCtrl                 = require('./controllers/tabsCtrl');
const viewCtrl                 = require('./controllers/viewCtrl');
const walletGenCtrl            = require('./controllers/walletGenCtrl');
const bulkGenCtrl              = require('./controllers/bulkGenCtrl');
const decryptWalletCtrl        = require('./controllers/decryptWalletCtrl');
const viewWalletCtrl           = require('./controllers/viewWalletCtrl');
const sendTxCtrl               = require('./controllers/sendTxCtrl');
const swapCtrl                 = require('./controllers/swapCtrl');
const signMsgCtrl              = require('./controllers/signMsgCtrl');
const contractsCtrl            = require('./controllers/contractsCtrl');
const ensCtrl                  = require('./controllers/ensCtrl');
const footerCtrl               = require('./controllers/footerCtrl');
const offlineTxCtrl            = require('./controllers/offlineTxCtrl');
const walletBalanceCtrl        = require('./controllers/walletBalanceCtrl');
const helpersCtrl              = require('./controllers/helpersCtrl');
const globalService            = require('./services/globalService');
const walletService            = require('./services/walletService');
const blockiesDrtv             = require('./directives/blockiesDrtv');
const addressFieldDrtv         = require('./directives/addressFieldDrtv');
const QRCodeDrtv               = require('./directives/QRCodeDrtv');
const walletDecryptDrtv        = require('./directives/walletDecryptDrtv');
const cxWalletDecryptDrtv      = require('./directives/cxWalletDecryptDrtv');
const fileReaderDrtv           = require('./directives/fileReaderDrtv');
const balanceDrtv              = require('./directives/balanceDrtv');

if (IS_CX) {
    const mainPopCtrl            = require('./controllers/CX/mainPopCtrl');
    const myWalletsCtrl          = require('./controllers/CX/myWalletsCtrl');
    const addWalletCtrl          = require('./controllers/CX/addWalletCtrl');
    const cxDecryptWalletCtrl    = require('./controllers/CX/cxDecryptWalletCtrl');
    const quickSendCtrl          = require('./controllers/CX/quickSendCtrl');
}
let app = angular.module('mewApp', ['pascalprecht.translate', 'ngSanitize','ngAnimate']);
app.config(['$compileProvider', function($compileProvider) {
  $compileProvider.aHrefSanitizationWhitelist(/^\s*(|blob|https|mailto):/);
}]);
app.config(['$translateProvider', function($translateProvider) {
  $translateProvider.useMissingTranslationHandlerLog();
  new translate($translateProvider);
}]);
app.config(['$animateProvider', function($animateProvider) {
    $animateProvider.classNameFilter(/^no-animate$/);
}]);
app.factory('globalService', ['$http', '$httpParamSerializerJQLike', globalService]);
app.factory('walletService', walletService);
app.directive('blockieAddress', blockiesDrtv);
app.directive('addressField', ['$compile', addressFieldDrtv]);
app.directive('qrCode', QRCodeDrtv);
app.directive('onReadFile', fileReaderDrtv);
app.directive('walletBalanceDrtv', balanceDrtv);
app.directive('walletDecryptDrtv', walletDecryptDrtv);
app.directive('cxWalletDecryptDrtv', cxWalletDecryptDrtv);
app.controller('tabsCtrl', ['$scope', 'globalService', '$translate', '$sce', tabsCtrl]);
app.controller('viewCtrl', ['$scope', 'globalService', '$sce', viewCtrl]);
app.controller('walletGenCtrl', ['$scope', walletGenCtrl]);
app.controller('bulkGenCtrl', ['$scope', bulkGenCtrl]);
app.controller('decryptWalletCtrl', ['$scope', '$sce', 'walletService', decryptWalletCtrl]);
app.controller('viewWalletCtrl', ['$scope', 'walletService', viewWalletCtrl]);
app.controller('sendTxCtrl', ['$scope', '$sce', 'walletService', sendTxCtrl]);
app.controller('swapCtrl', ['$scope', '$sce', 'walletService', swapCtrl]);
app.controller('signMsgCtrl', ['$scope', '$sce', 'walletService', signMsgCtrl]);
app.controller('contractsCtrl', ['$scope', '$sce', 'walletService', contractsCtrl]);
app.controller('ensCtrl', ['$scope', '$sce', 'walletService', ensCtrl]);
app.controller('footerCtrl', ['$scope', 'globalService', footerCtrl]);
app.controller('offlineTxCtrl', ['$scope', '$sce', 'walletService', offlineTxCtrl]);
app.controller('walletBalanceCtrl', ['$scope', '$sce', walletBalanceCtrl]);
app.controller('helpersCtrl', ['$scope', helpersCtrl]);
if (IS_CX) {
  app.controller('addWalletCtrl', ['$scope', '$sce', addWalletCtrl]);
  app.controller('myWalletsCtrl', ['$scope', '$sce','walletService', myWalletsCtrl]);
  app.controller('mainPopCtrl', ['$scope', '$sce', mainPopCtrl]);
  app.controller('quickSendCtrl', ['$scope', '$sce', quickSendCtrl]);
  app.controller('cxDecryptWalletCtrl', ['$scope', '$sce', 'walletService', cxDecryptWalletCtrl]);
}
